from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler

from ..storage.store import load_store, update_user_activity, clear_notification_flag
from ..commands.middlewares import check_ban_status

@check_ban_status
async def my_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª–∏—á–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ‚Äî —Ç–æ–ª—å–∫–æ –≤–Ω–µ –∏–≥—Ä—ã."""
    update_user_activity(update.effective_user)
    store = load_store()
    uid = str(update.effective_user.id)
    user = store["users"].get(uid)
    if not user or "current_game" in user:
        await update.message.reply_text("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω–µ –∏–≥—Ä—ã.")
        return
    s = user.get("stats", {})
    await update.message.reply_text(
        "```"
        f"üßë –í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n\n"
        f"üé≤ –í—Å–µ–≥–æ –∏–≥—Ä: {s.get('games_played',0)}\n"
        f"üèÜ –ü–æ–±–µ–¥: {s.get('wins',0)}\n"
        f"üíî –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {s.get('losses',0)}\n"
        f"üìä –ü—Ä–æ—Ü–µ–Ω—Ç: {s.get('win_rate',0.0)*100:.2f}%"
        "```",
        parse_mode="Markdown"
    )


@check_ban_status
async def global_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    update_user_activity(update.effective_user)
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É ‚Äî —Ç–æ–ª—å–∫–æ –≤–Ω–µ –∏–≥—Ä—ã."""
    store = load_store()
    g = store["global"]
    # –µ—Å–ª–∏ –≤–æ –≤—Ä–µ–º—è –ø–∞—Ä—Ç–∏–∏ ‚Äî –∑–∞–ø—Ä–µ—Ç
    uid = str(update.effective_user.id)
    user = store["users"].get(uid)
    if user and "current_game" in user:
        await update.message.reply_text("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω–µ –∏–≥—Ä—ã.")
        return
    
    tp = g.get("top_player", {})
    if tp:
        top_line = f"–°–∏–ª—å–Ω–µ–π—à–∏–π: @{tp['username']} ({tp['wins']} –ø–æ–±–µ–¥)\n\n"
    else:
        top_line = ""
    
    await update.message.reply_text(
        "```"
        f"üåê –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n\n"
        f"üé≤ –í—Å–µ–≥–æ –∏–≥—Ä: {g['total_games']}\n"
        f"üèÜ –ü–æ–±–µ–¥: {g['total_wins']}\n"
        f"üíî –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {g['total_losses']}\n"
        f"üìä –ü—Ä–æ—Ü–µ–Ω—Ç: {g['win_rate']*100:.2f}%\n\n"
        f"{top_line}"
        "```",
        parse_mode="Markdown"
    )


@check_ban_status
async def only_outside_game(update, context):
    clear_notification_flag(str(update.effective_user.id))
    await update.message.reply_text("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤–Ω–µ –∏–≥—Ä—ã.")
    # –≤–µ—Ä–Ω–µ–º —Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º —Å–µ–π—á–∞—Å —é–∑–µ—Ä:
    return context.user_data.get("state", ConversationHandler.END)